var LightningRodItem = ItemWeaponConfigurator.New(ItemName, ItemGuid)
            .SetDisplayNameText(Helpers.CreateString(SSSContext, "LightRodName", itemName))
            .SetDescriptionText(Helpers.CreateString(SSSContext, "LightRodDesc", "This spear is wreathed in electrical energy. On hit it may release this energy on a enemy in a 30 yard radius."))
            .SetFlavorText(Helpers.CreateString(SSSContext, "LightRodFT", ""))
            .SetType("fa2dd17cbde7d3f4aa918d467c30516e")
            .SetIcon(Icon_LightningRod)
            .AddToEnchantments(
                "eb2faccc4c9487d43b3575d7e77ff3f5",
                "914d7ee77fb09d846924ca08bccee0ff",
                "5ce35a7d-6221-4492-aed0-926cce0059ba")
            .SetCost(56000)
            .SetVisualParameters(new WeaponVisualParameters()
            {
                m_Projectiles = Array.Empty<BlueprintProjectileReference>(),
                m_PossibleAttachSlots = Array.Empty<UnitEquipmentVisualSlotType>(),
not needed      m_WeaponModel = new PrefabLink() { AssetId = "2eeaa76f450f39f41af2a52fd28de7bc" }
            })
            .SetCR(7)
            .Configure();


var PotofEndlessFoodItem = ItemEquipmentUsableConfigurator.New(itemName, itemGuid)
                .SetDisplayNameText(Helpers.CreateString(SSSContext, "PotofFoodName", "Pot of Plenty"))
                .SetDescriptionText(Helpers.CreateString(SSSContext, "PotofFoodDesc", "Once per you may use this item to grant you party members each a random food buff, doing so removes any current food buff."))
                .SetFlavorText(Helpers.CreateString(SSSContext, "PotofFoodFlav", "The pot never runs out of food, but you swear you've seen a paw clawing for help, or a tail wriggling about in the boiling slop."))
                .SetIcon(Icon_PotofEndlessFood)
                .SetCharges(1)
                .SetInventoryPutSound("CommonPut")
                .SetInventoryTakeSound("CommonTake")
                .SetRestoreChargesOnRest(true)
                .SetCost(7300)
                .SetWeight((float)5.0)
                .SetType(UsableItemType.Other)
                .SetMiscellaneousType(Kingmaker.Blueprints.Items.BlueprintItem.MiscellaneousItemType.None)
                .SetSpendCharges(true)
                .SetAbility(PotofEndlessFoodAbility.ToReference<BlueprintAbilityReference>().ToString())
                .Configure();


var RingofShieldItem = Helpers.CreateBlueprint<BlueprintItemEquipmentRing>(SSSContext, "RingofShieldItem", bp =>
           {
               bp.SetName(SSSContext, "Ring of Evershield");
               bp.SetDescription(SSSContext, "This ring grants its wearer a continuous shield spell effect.");
               bp.m_Icon = Icon_RingofShield;
               bp.m_Cost = 22111;
               bp.SetFlavorText(SSSContext, "This is a dull iron ring, with a faded engraving that reads: ..ever .. ... Shield. .... .");
               bp.m_InventoryTakeSound = "RingTake";
               bp.m_InventoryPutSound = "RingPut";
               bp.m_InventoryEquipSound = "RingPut";
               bp.m_Enchantments = new BlueprintEquipmentEnchantmentReference[]
               {
                    RingofShieldEnc.ToReference<BlueprintEquipmentEnchantmentReference>()
               };
           });